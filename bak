monitor_notifications_alt() {
    local timeout_duration=${NOTIFICATION_TIMEOUT:-60}
    log "Monitoring notifications for $timeout_duration seconds..."

    timeout "$timeout_duration" \
        sudo -u "$TARGET_USER" DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS" \
        busctl --user monitor org.freedesktop.Notifications --json=short 2>/dev/null | \
    while IFS= read -r line; do
        if echo "$line" | grep -q '"member":"Notify"'; then
            app_name=$(echo "$line" | jq -r '.payload.data[0]' 2>/dev/null)
            desktop_entry=$(echo "$line" | jq -r '.payload.data[6]["desktop-entry"].data // empty' 2>/dev/null)

            if [[ -z "$desktop_entry" ]]; then
                check_entry="$app_name"
            else
                check_entry=$(get_app_name_from_desktop_entry "$desktop_entry")
            fi

            if is_whitelisted "$check_entry"; then
                log "Allowed notification from: $check_entry"
                handle_notification_actions
                log "===== wakeup-check.sh (mode: $MODE) finished ====="
                sync
                sleep 2
                kill "$$"
            else
                log "Disallowed notification from: $check_entry"
            fi
        fi
    done
    #log "Notification monitor timed out without match."
    return 124
}

[Unit]
Description=Wakeup Check Post Resume
After=suspend.target
After=hibernate.target
After=hybrid-sleep.target

[Service]
Type=oneshot
ExecStart=/usr/local/bin/wakeup-check.sh post
TimeoutStartSec=300

[Install]
WantedBy=sleep.target

[Unit]
Description=Wakeup Check Pre Suspend
Before=suspend.target
Conflicts=wakeup-check-post.service
After=wakeup-check-post.service

[Service]
Type=oneshot
ExecStart=/usr/local/bin/wakeup-check.sh pre
ExecStartPost=/bin/systemctl start wakeup-check-lock.service
TimeoutStartSec=300

[Install]
WantedBy=suspend.target
